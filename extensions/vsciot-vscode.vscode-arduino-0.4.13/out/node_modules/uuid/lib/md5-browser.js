/*
 * Browser-compatible JavaScript MD5
 *
 * Modification of JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

'use strict';

function md5(bytes) {
  if (typeof(bytes) == 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape
    bytes = new Array(msg.length);
    for (var i = 0; i < msg.length; i++) bytes[i] = msg.charCodeAt(i);
  }

  return md5ToHexEncodedArray(
    wordsToMd5(
      bytesToWords(bytes)
      , bytes.length * 8)
  );
}


/*
* Convert an array of little-endian words to an array of bytes
*/
function md5ToHexEncodedArray(input) {
  var i;
  var x;
  var output = [];
  var length32 = input.length * 32;
  var hexTab = '0123456789abcdef';
  var hex;

  for (i = 0; i < length32; i += 8) {
    x = (input[i >> 5] >>> (i % 32)) & 0xFF;

    hex = parseInt(hexTab.charAt((x >>> 4) & 0x0F) + hexTab.charAt(x & 0x0F), 16);

    output.push(hex);
  }
  return output;
}

/*
* Calculate the MD5 of an array of little-endian words, and a bit length.
*/
function wordsToMd5(x, len) {
  /* append padding */
  x[len >> 5] |= 0x80 << (len % 32);
  x[(((len + 64) >>> 9) << 4) + 14] = len;

  var i;
  var olda;
  var oldb;
  var oldc;
  var oldd;
  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;

  var d = 271733878;

  for (i = 0; i < x.length; i += 16) {
    olda = a;
    oldb = b;
    oldc = c;
    oldd = d;

    a = md5ff(a, b, c, d, x[i], 7, -680876936);
    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);

    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = md5gg(b, c, d, a, x[i], 20, -373897302);
    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);

    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = md5hh(d, a, b, c, x[i], 11, -358537222);
    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);

    a = md5ii(a, b, c, d, x[i], 6, -198630844);
    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);

    a = safeAdd(a, olda);
    b = safeAdd(b, oldb);
    c = safeAdd(c, oldc);
    d = safeAdd(d, oldd);
  }
  return [a, b, c, d];
}

/*
* Convert an array bytes to an array of little-endian words
* Characters >255 have their high-byte silently ignored.
*/
function bytesToWords(input) {
  var i;
  var output = [];
  output[(input.length >> 2) - 1] = undefined;
  for (i = 0; i < output.length; i += 1) {
    output[i] = 0;
  }
  var length8 = input.length * 8;
  for (i = 0; i < length8; i += 8) {
    output[i >> 5] |= (input[(i / 8)] & 0xFF) << (i % 32);
  }

  return output;
}

/*
* Add integers, wrapping at 2^32. This uses 16-bit operations internally
* to work around bugs in some JS interpreters.
*/
function safeAdd(x, y) {
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return (msw << 16) | (lsw & 0xFFFF);
}

/*
* Bitwise rotate a 32-bit number to the left.
*/
function bitRotateLeft(num, cnt) {
  return (num << cnt) | (num >>> (32 - cnt));
}

/*
* These functions implement the four basic operations the algorithm uses.
*/
function md5cmn(q, a, b, x, s, t) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
}
function md5ff(a, b, c, d, x, s, t) {
  return md5cmn((b & c) | ((~b) & d), a, b, x, s, t);
}
function md5gg(a, b, c, d, x, s, t) {
  return md5cmn((b & d) | (c & (~d)), a, b, x, s, t);
}
function md5hh(a, b, c, d, x, s, t) {
  return md5cmn(b ^ c ^ d, a, b, x, s, t);
}
function md5ii(a, b, c, d, x, s, t) {
  return md5cmn(c ^ (b | (~d)), a, b, x, s, t);
}

module.exports = md5;

// SIG // Begin signature block
// SIG // MIIn3AYJKoZIhvcNAQcCoIInzTCCJ8kCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // opjrdM3nrLBU9gj6rCvg3n8avpxp1H+/a5m1Fyd5cF+g
// SIG // gg2WMIIGFDCCA/ygAwIBAgITMwAAAvMJbkUH18AklgAA
// SIG // AAAC8zANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTIyMDYzMDE3MzgyMloX
// SIG // DTIzMDkxNTE3MzgyMlowgYgxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xMjAwBgNVBAMTKU1pY3Jvc29mdCAzcmQgUGFydHkg
// SIG // QXBwbGljYXRpb24gQ29tcG9uZW50MIIBIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr60JgfZVHtyxUjDP
// SIG // RUyYBDZHgOnoau2MKAmwIGvyGGE6SjsgzyZGPZSTs0zx
// SIG // 2iKtFyM+MMAGaTPhAn+S8W+LO/bnu0PhYNTfx03gMBAz
// SIG // q0qvY2yU3ysXfH+C53qfvW/dUzYdT710qXUVQI7vpOVU
// SIG // 7e+aKGnaqKBDyf8Z0uq9cHXHaXk74em8sjqDUkm2eDJQ
// SIG // ZWic5DNEnkw8OBjQetCkLtWVHtfB+J0TyJe4bKDcwaB6
// SIG // jI2ziWxSH/3HSFpTInbHKtGXuibQoJfA+mPLYoFRGJN8
// SIG // f7pT30g5tuLNUK4QUssenZTneQA/pnsVFmfoIagAwwxR
// SIG // hrkGPtVkOwqCqxd91wIDAQABo4IBfjCCAXowHwYDVR0l
// SIG // BBgwFgYKKwYBBAGCN0wRAQYIKwYBBQUHAwMwHQYDVR0O
// SIG // BBYEFHpzR29bYqzU06mm+xIDW0/abcPgMFAGA1UdEQRJ
// SIG // MEekRTBDMSkwJwYDVQQLEyBNaWNyb3NvZnQgT3BlcmF0
// SIG // aW9ucyBQdWVydG8gUmljbzEWMBQGA1UEBRMNMjMxNTIy
// SIG // KzQ3MTMzNjAfBgNVHSMEGDAWgBRIbmTlUAXTgqoXNzci
// SIG // tW2oynUClTBUBgNVHR8ETTBLMEmgR6BFhkNodHRwOi8v
// SIG // d3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NybC9NaWND
// SIG // b2RTaWdQQ0EyMDExXzIwMTEtMDctMDguY3JsMGEGCCsG
// SIG // AQUFBwEBBFUwUzBRBggrBgEFBQcwAoZFaHR0cDovL3d3
// SIG // dy5taWNyb3NvZnQuY29tL3BraW9wcy9jZXJ0cy9NaWND
// SIG // b2RTaWdQQ0EyMDExXzIwMTEtMDctMDguY3J0MAwGA1Ud
// SIG // EwEB/wQCMAAwDQYJKoZIhvcNAQELBQADggIBAICJJoIo
// SIG // aU2RkTKNc8lbsIRZS81hAwT8XrwfrI3IB7SEkQhAccHA
// SIG // Skulj2D5CQnfnA6N2xDHXwj4MjHwTMUNg5V2kp0RnOcD
// SIG // 1QuoWs5eeUuHOgMWnJrpEW1XvPbG/qW648WmCXuVJq+L
// SIG // XPfu2nf3tvMoq3aa0/9/CkSl3lcI1WUQFK6sn/UkaTob
// SIG // Q9q3DWUXIi/NiG/XW92886GhvctJAmkPjpY3oUPGTjuE
// SIG // Lr/GXtyRnre859Ci5l5F0m4GjUYmS53kHQery9hlty6w
// SIG // slWndAKYfXOEsr5VtBbmjFAkUFC+1HFVU+oFCSCMhxyi
// SIG // dVxnIHW5gBcQPZQ64KIG5nOk1MwVHwFhrIHqAMzUyWe2
// SIG // jmc4NGN2NtYbASgKdRsc9KMrNxgebO7eprCu9s80bC2R
// SIG // e+bfJLbqJK5HfAuSEtqf+oRdC7T5d2lj9JNVfgmD2cNA
// SIG // oBx1Xl+Xwv9Vd+dx0fKP09dOhet+vxuGLzKaptyU6ABQ
// SIG // LmhoVOWnqVvN2UUYwp2ZM1AmAjog3KA3Y3K6+iLtoeeD
// SIG // sKm+OCTVJ5Zgnlzcn2jwn6byPRtz4B4N0slyOuwOd9ro
// SIG // ZTU1l51WrmzI7mimgJUXhkE8XlwDnLs0O9T0F3L/O5Rz
// SIG // 3YBiQF8cpp0mgVlVV6fOmNtH0XnRbJE2FeGMHEbDZOB8
// SIG // MKnZx8vyVoYZ+0iVMIIHejCCBWKgAwIBAgIKYQ6Q0gAA
// SIG // AAAAAzANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UEBhMC
// SIG // VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcT
// SIG // B1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw
// SIG // b3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3Qg
// SIG // Q2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTEwHhcNMTEw
// SIG // NzA4MjA1OTA5WhcNMjYwNzA4MjEwOTA5WjB+MQswCQYD
// SIG // VQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
// SIG // A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
// SIG // IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQg
// SIG // Q29kZSBTaWduaW5nIFBDQSAyMDExMIICIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAg8AMIICCgKCAgEAq/D6chAcLq3YbqqC
// SIG // EE00uvK2WCGfQhsqa+laUKq4BjgaBEm6f8MMHt03a8YS
// SIG // 2AvwOMKZBrDIOdUBFDFC04kNeWSHfpRgJGyvnkmc6Whe
// SIG // 0t+bU7IKLMOv2akrrnoJr9eWWcpgGgXpZnboMlImEi/n
// SIG // qwhQz7NEt13YxC4Ddato88tt8zpcoRb0RrrgOGSsbmQ1
// SIG // eKagYw8t00CT+OPeBw3VXHmlSSnnDb6gE3e+lD3v++Mr
// SIG // WhAfTVYoonpy4BI6t0le2O3tQ5GD2Xuye4Yb2T6xjF3o
// SIG // iU+EGvKhL1nkkDstrjNYxbc+/jLTswM9sbKvkjh+0p2A
// SIG // LPVOVpEhNSXDOW5kf1O6nA+tGSOEy/S6A4aN91/w0FK/
// SIG // jJSHvMAhdCVfGCi2zCcoOCWYOUo2z3yxkq4cI6epZuxh
// SIG // H2rhKEmdX4jiJV3TIUs+UsS1Vz8kA/DRelsv1SPjcF0P
// SIG // UUZ3s/gA4bysAoJf28AVs70b1FVL5zmhD+kjSbwYuER8
// SIG // ReTBw3J64HLnJN+/RpnF78IcV9uDjexNSTCnq47f7Fuf
// SIG // r/zdsGbiwZeBe+3W7UvnSSmnEyimp31ngOaKYnhfsi+E
// SIG // 11ecXL93KCjx7W3DKI8sj0A3T8HhhUSJxAlMxdSlQy90
// SIG // lfdu+HggWCwTXWCVmj5PM4TasIgX3p5O9JawvEagbJjS
// SIG // 4NaIjAsCAwEAAaOCAe0wggHpMBAGCSsGAQQBgjcVAQQD
// SIG // AgEAMB0GA1UdDgQWBBRIbmTlUAXTgqoXNzcitW2oynUC
// SIG // lTAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTALBgNV
// SIG // HQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSME
// SIG // GDAWgBRyLToCMZBDuRQFTuHqp8cx0SOJNDBaBgNVHR8E
// SIG // UzBRME+gTaBLhklodHRwOi8vY3JsLm1pY3Jvc29mdC5j
// SIG // b20vcGtpL2NybC9wcm9kdWN0cy9NaWNSb29DZXJBdXQy
// SIG // MDExXzIwMTFfMDNfMjIuY3JsMF4GCCsGAQUFBwEBBFIw
// SIG // UDBOBggrBgEFBQcwAoZCaHR0cDovL3d3dy5taWNyb3Nv
// SIG // ZnQuY29tL3BraS9jZXJ0cy9NaWNSb29DZXJBdXQyMDEx
// SIG // XzIwMTFfMDNfMjIuY3J0MIGfBgNVHSAEgZcwgZQwgZEG
// SIG // CSsGAQQBgjcuAzCBgzA/BggrBgEFBQcCARYzaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9kb2NzL3By
// SIG // aW1hcnljcHMuaHRtMEAGCCsGAQUFBwICMDQeMiAdAEwA
// SIG // ZQBnAGEAbABfAHAAbwBsAGkAYwB5AF8AcwB0AGEAdABl
// SIG // AG0AZQBuAHQALiAdMA0GCSqGSIb3DQEBCwUAA4ICAQBn
// SIG // 8oalmOBUeRou09h0ZyKbC5YR4WOSmUKWfdJ5DJDBZV8u
// SIG // LD74w3LRbYP+vj/oCso7v0epo/Np22O/IjWll11lhJB9
// SIG // i0ZQVdgMknzSGksc8zxCi1LQsP1r4z4HLimb5j0bpdS1
// SIG // HXeUOeLpZMlEPXh6I/MTfaaQdION9MsmAkYqwooQu6Sp
// SIG // BQyb7Wj6aC6VoCo/KmtYSWMfCWluWpiW5IP0wI/zRive
// SIG // /DvQvTXvbiWu5a8n7dDd8w6vmSiXmE0OPQvyCInWH8My
// SIG // GOLwxS3OW560STkKxgrCxq2u5bLZ2xWIUUVYODJxJxp/
// SIG // sfQn+N4sOiBpmLJZiWhub6e3dMNABQamASooPoI/E01m
// SIG // C8CzTfXhj38cbxV9Rad25UAqZaPDXVJihsMdYzaXht/a
// SIG // 8/jyFqGaJ+HNpZfQ7l1jQeNbB5yHPgZ3BtEGsXUfFL5h
// SIG // YbXw3MYbBL7fQccOKO7eZS/sl/ahXJbYANahRr1Z85el
// SIG // CUtIEJmAH9AAKcWxm6U/RXceNcbSoqKfenoi+kiVH6v7
// SIG // RyOA9Z74v2u3S5fi63V4GuzqN5l5GEv/1rMjaHXmr/r8
// SIG // i+sLgOppO6/8MO0ETI7f33VtY5E90Z1WTk+/gFcioXgR
// SIG // MiF670EKsT/7qMykXcGhiJtXcVZOSEXAQsmbdlsKgEhr
// SIG // /Xmfwb1tbWrJUnMTDXpQzTGCGZ4wghmaAgEBMIGVMH4x
// SIG // CzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9u
// SIG // MRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNy
// SIG // b3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jv
// SIG // c29mdCBDb2RlIFNpZ25pbmcgUENBIDIwMTECEzMAAALz
// SIG // CW5FB9fAJJYAAAAAAvMwDQYJYIZIAWUDBAIBBQCgga4w
// SIG // GQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQwHAYKKwYB
// SIG // BAGCNwIBCzEOMAwGCisGAQQBgjcCARUwLwYJKoZIhvcN
// SIG // AQkEMSIEIASA/vRr8eFpTPKDORVZKI+JJRqihhCw7Atm
// SIG // bnxc2cBjMEIGCisGAQQBgjcCAQwxNDAyoBSAEgBNAGkA
// SIG // YwByAG8AcwBvAGYAdKEagBhodHRwOi8vd3d3Lm1pY3Jv
// SIG // c29mdC5jb20wDQYJKoZIhvcNAQEBBQAEggEAUTM8nndf
// SIG // PQ/LmbmPr1rIsQIwqOLDvr6GZJroLrfkqkOqs3xYhr2c
// SIG // iBKuRL+DyTQjR/TyemYOf9P67j4bVVWJQmjEE8DZ3XJQ
// SIG // 4jYVxAsY6yEaz4hul2u22id9HTBhxhrMBBEWqB3LeG/e
// SIG // KhrRFclJ4+KCcK7lXpqbas5XoDLMTa2Rx7/IWRf8Z2K4
// SIG // +IJO0+bcl312RIpsHKRTKK4s+lttkBAwJ3UtOCLTpLOf
// SIG // /5Qiq0YcP9vnVQVofbVGL3J2c/KovVyK3jEW0cn0B5xM
// SIG // O3fL20+6TyfED/71ukC3TdjQLOUWrYtmQhPtPIg8rST4
// SIG // 61WQ955DOv43XF96n2KaYfLpRKGCFygwghckBgorBgEE
// SIG // AYI3AwMBMYIXFDCCFxAGCSqGSIb3DQEHAqCCFwEwghb9
// SIG // AgEDMQ8wDQYJYIZIAWUDBAIBBQAwggFYBgsqhkiG9w0B
// SIG // CRABBKCCAUcEggFDMIIBPwIBAQYKKwYBBAGEWQoDATAx
// SIG // MA0GCWCGSAFlAwQCAQUABCC5zBAyhnx1l5tYiNiPDHOs
// SIG // LmMz0KkvYDPuBpx0tX1fvQIGY8fdAPYqGBIyMDIzMDEy
// SIG // NTAxMzAyOS4wNFowBIACAfSggdikgdUwgdIxCzAJBgNV
// SIG // BAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYD
// SIG // VQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQg
// SIG // Q29ycG9yYXRpb24xLTArBgNVBAsTJE1pY3Jvc29mdCBJ
// SIG // cmVsYW5kIE9wZXJhdGlvbnMgTGltaXRlZDEmMCQGA1UE
// SIG // CxMdVGhhbGVzIFRTUyBFU046OEQ0MS00QkY3LUIzQjcx
// SIG // JTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNl
// SIG // cnZpY2WgghF4MIIHJzCCBQ+gAwIBAgITMwAAAbP+Jc4p
// SIG // GxuKHAABAAABszANBgkqhkiG9w0BAQsFADB8MQswCQYD
// SIG // VQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
// SIG // A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
// SIG // IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQg
// SIG // VGltZS1TdGFtcCBQQ0EgMjAxMDAeFw0yMjA5MjAyMDIy
// SIG // MDNaFw0yMzEyMTQyMDIyMDNaMIHSMQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMS0wKwYDVQQLEyRNaWNyb3NvZnQgSXJlbGFu
// SIG // ZCBPcGVyYXRpb25zIExpbWl0ZWQxJjAkBgNVBAsTHVRo
// SIG // YWxlcyBUU1MgRVNOOjhENDEtNEJGNy1CM0I3MSUwIwYD
// SIG // VQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2aWNl
// SIG // MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA
// SIG // tHwPuuYYgK4ssGCCsr2N7eElKlz0JPButr/gpvZ67kNl
// SIG // HqgKAW0JuKAy4xxjfVCUev/eS5aEcnTmfj63fvs8eid0
// SIG // MNvP91T6r819dIqvWnBTY4vKVjSzDnfVVnWxYB3IPYRA
// SIG // ITNN0sPgolsLrCYAKieIkECq+EPJfEnQ26+WTvit1US+
// SIG // uJuwNnHMKVYRri/rYQ2P8fKIJRfcxkadj8CEPJrN+lyE
// SIG // Nag/pwmA0JJeYdX1ewmBcniX4BgCBqoC83w34Sk37RMS
// SIG // sKAU5/BlXbVyDu+B6c5XjyCYb8Qx/Qu9EB6KvE9S76M0
// SIG // HclIVtbVZTxnnGwsSg2V7fmJx0RP4bfAM2ZxJeVBizi3
// SIG // 3ghZHnjX4+xROSrSSZ0/j/U7gYPnhmwnl5SctprBc7HF
// SIG // PV+BtZv1VGDVnhqylam4vmAXAdrxQ0xHGwp9+ivqqtdV
// SIG // VDU50k5LUmV6+GlmWyxIJUOh0xzfQjd9Z7OfLq006h+l
// SIG // 9o+u3AnS6RdwsPXJP7z27i5AH+upQronsemQ27R9Hkzn
// SIG // Ea05yH2fKdw71qWivEN+IR1vrN6q0J9xujjq77+t+yyV
// SIG // wZK4kXOXAQ2dT69D4knqMlFSsH6avnXNZQyJZMsNWaEt
// SIG // 3rr/8Nr9gGMDQGLSFxi479Zy19aT/fHzsAtu2ocBuTqL
// SIG // VwnxrZyiJ66P70EBJKO5eQECAwEAAaOCAUkwggFFMB0G
// SIG // A1UdDgQWBBTQGl3CUWdSDBiLOEgh/14F3J/DjTAfBgNV
// SIG // HSMEGDAWgBSfpxVdAF5iXYP05dJlpxtTNRnpcjBfBgNV
// SIG // HR8EWDBWMFSgUqBQhk5odHRwOi8vd3d3Lm1pY3Jvc29m
// SIG // dC5jb20vcGtpb3BzL2NybC9NaWNyb3NvZnQlMjBUaW1l
// SIG // LVN0YW1wJTIwUENBJTIwMjAxMCgxKS5jcmwwbAYIKwYB
// SIG // BQUHAQEEYDBeMFwGCCsGAQUFBzAChlBodHRwOi8vd3d3
// SIG // Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NlcnRzL01pY3Jv
// SIG // c29mdCUyMFRpbWUtU3RhbXAlMjBQQ0ElMjAyMDEwKDEp
// SIG // LmNydDAMBgNVHRMBAf8EAjAAMBYGA1UdJQEB/wQMMAoG
// SIG // CCsGAQUFBwMIMA4GA1UdDwEB/wQEAwIHgDANBgkqhkiG
// SIG // 9w0BAQsFAAOCAgEAWoa7N86wCbjAAl8RGYmBZbS00ss+
// SIG // TpViPnf6EGZQgKyoaCP2hc01q2AKr6Me3TcSJPNWHG14
// SIG // pY4uhMzHf1wJxQmAM5Agf4aO7KNhVV04Jr0XHqUjr3T8
// SIG // 4FkWXPYMO4ulQG6j/+/d7gqezjXaY7cDqYNCSd3F4lKx
// SIG // 0FJuQqpxwHtML+a4U6HODf2Z+KMYgJzWRnOIkT/od0oI
// SIG // Xyn36+zXIZRHm7OQij7ryr+fmQ23feF1pDbfhUSHTA9I
// SIG // T50KCkpGp/GBiwFP/m1drd7xNfImVWgb2PBcGsqdJBvj
// SIG // 6TX2MdUHfBVR+We4A0lEj1rNbCpgUoNtlaR9Dy2k2gV8
// SIG // ooVEdtaiZyh0/VtWfuQpZQJMDxgbZGVMG2+uzcKpjeYA
// SIG // NMlSKDhyQ38wboAivxD4AKYoESbg4Wk5xkxfRzFqyil2
// SIG // DEz1pJ0G6xol9nci2Xe8LkLdET3u5RGxUHam8L4KeMW2
// SIG // 38+RjvWX1RMfNQI774ziFIZLOR+77IGFcwZ4FmoteX1x
// SIG // 9+Bg9ydEWNBP3sZv9uDiywsgW40k00Am5v4i/GGiZGu1
// SIG // a4HhI33fmgx+8blwR5nt7JikFngNuS83jhm8RHQQdFqQ
// SIG // vbFvWuuyPtzwj5q4SpjO1SkOe6roHGkEhQCUXdQMnRIw
// SIG // bnGpb/2EsxadokK8h6sRZMWbriO2ECLQEMzCcLAwggdx
// SIG // MIIFWaADAgECAhMzAAAAFcXna54Cm0mZAAAAAAAVMA0G
// SIG // CSqGSIb3DQEBCwUAMIGIMQswCQYDVQQGEwJVUzETMBEG
// SIG // A1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
// SIG // ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MTIwMAYDVQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0aWZp
// SIG // Y2F0ZSBBdXRob3JpdHkgMjAxMDAeFw0yMTA5MzAxODIy
// SIG // MjVaFw0zMDA5MzAxODMyMjVaMHwxCzAJBgNVBAYTAlVT
// SIG // MRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdS
// SIG // ZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9y
// SIG // YXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0
// SIG // YW1wIFBDQSAyMDEwMIICIjANBgkqhkiG9w0BAQEFAAOC
// SIG // Ag8AMIICCgKCAgEA5OGmTOe0ciELeaLL1yR5vQ7VgtP9
// SIG // 7pwHB9KpbE51yMo1V/YBf2xK4OK9uT4XYDP/XE/HZveV
// SIG // U3Fa4n5KWv64NmeFRiMMtY0Tz3cywBAY6GB9alKDRLem
// SIG // jkZrBxTzxXb1hlDcwUTIcVxRMTegCjhuje3XD9gmU3w5
// SIG // YQJ6xKr9cmmvHaus9ja+NSZk2pg7uhp7M62AW36MEByd
// SIG // Uv626GIl3GoPz130/o5Tz9bshVZN7928jaTjkY+yOSxR
// SIG // nOlwaQ3KNi1wjjHINSi947SHJMPgyY9+tVSP3PoFVZht
// SIG // aDuaRr3tpK56KTesy+uDRedGbsoy1cCGMFxPLOJiss25
// SIG // 4o2I5JasAUq7vnGpF1tnYN74kpEeHT39IM9zfUGaRnXN
// SIG // xF803RKJ1v2lIH1+/NmeRd+2ci/bfV+AutuqfjbsNkz2
// SIG // K26oElHovwUDo9Fzpk03dJQcNIIP8BDyt0cY7afomXw/
// SIG // TNuvXsLz1dhzPUNOwTM5TI4CvEJoLhDqhFFG4tG9ahha
// SIG // YQFzymeiXtcodgLiMxhy16cg8ML6EgrXY28MyTZki1ug
// SIG // poMhXV8wdJGUlNi5UPkLiWHzNgY1GIRH29wb0f2y1BzF
// SIG // a/ZcUlFdEtsluq9QBXpsxREdcu+N+VLEhReTwDwV2xo3
// SIG // xwgVGD94q0W29R6HXtqPnhZyacaue7e3PmriLq0CAwEA
// SIG // AaOCAd0wggHZMBIGCSsGAQQBgjcVAQQFAgMBAAEwIwYJ
// SIG // KwYBBAGCNxUCBBYEFCqnUv5kxJq+gpE8RjUpzxD/LwTu
// SIG // MB0GA1UdDgQWBBSfpxVdAF5iXYP05dJlpxtTNRnpcjBc
// SIG // BgNVHSAEVTBTMFEGDCsGAQQBgjdMg30BATBBMD8GCCsG
// SIG // AQUFBwIBFjNodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20v
// SIG // cGtpb3BzL0RvY3MvUmVwb3NpdG9yeS5odG0wEwYDVR0l
// SIG // BAwwCgYIKwYBBQUHAwgwGQYJKwYBBAGCNxQCBAweCgBT
// SIG // AHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQF
// SIG // MAMBAf8wHwYDVR0jBBgwFoAU1fZWy4/oolxiaNE9lJBb
// SIG // 186aGMQwVgYDVR0fBE8wTTBLoEmgR4ZFaHR0cDovL2Ny
// SIG // bC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVjdHMv
// SIG // TWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3JsMFoGCCsG
// SIG // AQUFBwEBBE4wTDBKBggrBgEFBQcwAoY+aHR0cDovL3d3
// SIG // dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNSb29D
// SIG // ZXJBdXRfMjAxMC0wNi0yMy5jcnQwDQYJKoZIhvcNAQEL
// SIG // BQADggIBAJ1VffwqreEsH2cBMSRb4Z5yS/ypb+pcFLY+
// SIG // TkdkeLEGk5c9MTO1OdfCcTY/2mRsfNB1OW27DzHkwo/7
// SIG // bNGhlBgi7ulmZzpTTd2YurYeeNg2LpypglYAA7AFvono
// SIG // aeC6Ce5732pvvinLbtg/SHUB2RjebYIM9W0jVOR4U3Uk
// SIG // V7ndn/OOPcbzaN9l9qRWqveVtihVJ9AkvUCgvxm2EhIR
// SIG // XT0n4ECWOKz3+SmJw7wXsFSFQrP8DJ6LGYnn8AtqgcKB
// SIG // GUIZUnWKNsIdw2FzLixre24/LAl4FOmRsqlb30mjdAy8
// SIG // 7JGA0j3mSj5mO0+7hvoyGtmW9I/2kQH2zsZ0/fZMcm8Q
// SIG // q3UwxTSwethQ/gpY3UA8x1RtnWN0SCyxTkctwRQEcb9k
// SIG // +SS+c23Kjgm9swFXSVRk2XPXfx5bRAGOWhmRaw2fpCjc
// SIG // ZxkoJLo4S5pu+yFUa2pFEUep8beuyOiJXk+d0tBMdrVX
// SIG // VAmxaQFEfnyhYWxz/gq77EFmPWn9y8FBSX5+k77L+Dvk
// SIG // txW/tM4+pTFRhLy/AsGConsXHRWJjXD+57XQKBqJC482
// SIG // 2rpM+Zv/Cuk0+CQ1ZyvgDbjmjJnW4SLq8CdCPSWU5nR0
// SIG // W2rRnj7tfqAxM328y+l7vzhwRNGQ8cirOoo6CGJ/2XBj
// SIG // U02N7oJtpQUQwXEGahC0HVUzWLOhcGbyoYIC1DCCAj0C
// SIG // AQEwggEAoYHYpIHVMIHSMQswCQYDVQQGEwJVUzETMBEG
// SIG // A1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
// SIG // ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MS0wKwYDVQQLEyRNaWNyb3NvZnQgSXJlbGFuZCBPcGVy
// SIG // YXRpb25zIExpbWl0ZWQxJjAkBgNVBAsTHVRoYWxlcyBU
// SIG // U1MgRVNOOjhENDEtNEJGNy1CM0I3MSUwIwYDVQQDExxN
// SIG // aWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2aWNloiMKAQEw
// SIG // BwYFKw4DAhoDFQBxi0Tolt0eEqXCQl4qgJXUkiQOYaCB
// SIG // gzCBgKR+MHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpX
// SIG // YXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYD
// SIG // VQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNV
// SIG // BAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEw
// SIG // MA0GCSqGSIb3DQEBBQUAAgUA53rtCjAiGA8yMDIzMDEy
// SIG // NTA3NDkzMFoYDzIwMjMwMTI2MDc0OTMwWjB0MDoGCisG
// SIG // AQQBhFkKBAExLDAqMAoCBQDneu0KAgEAMAcCAQACAgIB
// SIG // MAcCAQACAhFgMAoCBQDnfD6KAgEAMDYGCisGAQQBhFkK
// SIG // BAIxKDAmMAwGCisGAQQBhFkKAwKgCjAIAgEAAgMHoSCh
// SIG // CjAIAgEAAgMBhqAwDQYJKoZIhvcNAQEFBQADgYEAJgrM
// SIG // S24QtGRPilbTitZK6bQ+VKfjqVXC78HwEL3MHJgAoUUC
// SIG // J9Z8IxhsTJBrUtKTAm630cHCOuZPq4xsOFyKFpX37CgW
// SIG // OK+yN3IxknT0TRCMXfJRiWoxpO5gKaOAYpZmhBpvHWwk
// SIG // RoXdwB07NLGiKmFyRwC9uE0uVpXmaNevCC4xggQNMIIE
// SIG // CQIBATCBkzB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMK
// SIG // V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG
// SIG // A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYD
// SIG // VQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAx
// SIG // MAITMwAAAbP+Jc4pGxuKHAABAAABszANBglghkgBZQME
// SIG // AgEFAKCCAUowGgYJKoZIhvcNAQkDMQ0GCyqGSIb3DQEJ
// SIG // EAEEMC8GCSqGSIb3DQEJBDEiBCAutTPiT2FuZD5FjoGL
// SIG // 09zuRWWO2KjW6n/bFoXoDLaidzCB+gYLKoZIhvcNAQkQ
// SIG // Ai8xgeowgecwgeQwgb0EIIahM9UqENIHtkbTMlBlQzaO
// SIG // T+WXXMkaHoo6GfvqT79CMIGYMIGApH4wfDELMAkGA1UE
// SIG // BhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNV
// SIG // BAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBD
// SIG // b3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRp
// SIG // bWUtU3RhbXAgUENBIDIwMTACEzMAAAGz/iXOKRsbihwA
// SIG // AQAAAbMwIgQgwbjJzHF8ITc6smpIWqkU0IFO9oBdSJL2
// SIG // QR3xjzRjb8kwDQYJKoZIhvcNAQELBQAEggIAPXbar8zd
// SIG // b+DkTazKODcfwDIwcvU2PktqllHtc02NEMQOzJhK8JQO
// SIG // p04eDctbvHmxDOAR/vsDW3AbEkkKTe0SBKOaSHwnQ9qk
// SIG // oOqL4b9mqgF3ycknxIBYmgWsC49bq7NjAf/KuEOH5pau
// SIG // tZ7Fh94DJhj0yzp7uo0y9ObCk1lyJHnvHg5uJIBJgOP/
// SIG // S0L1k2wXXyENsOVc33QyeEDSkPl4CIt1bslxFe4fC15t
// SIG // KVrdt1Xx5dFtFBOc+qepIbaPDxw6/ImK0fUaAWKHAQBq
// SIG // F05eLTSGeT338H7+B+GS2rC4t+vev3Cq6Al+uVfCLV8B
// SIG // sWM9vNNgiHcCsEYobHP9kKh9GrPr3aQjLUPtWyxfn2dF
// SIG // R+I3MfUKY91uYINMNDuafTTT9442vrjdxTYX0BXYqVoK
// SIG // vtNqsBVN2IxHht9Rwcc/OZJcl63GKBU4UsulgibBhVSN
// SIG // 3OQcyytdziSO5TM2rgk5lmdMnoE4Ps2ib7xnTvg4o3ZP
// SIG // s/FQpX/wjsYfCANHxZz1yC6WA2OWC3tI8Lnz5AoR+QJE
// SIG // Pdar0eeUhqokx/1zjs2UavWZEfj0EtmQnQ6yl75OgADg
// SIG // QuWdjnFwGpkSEhAbs3KhcVypoolxdcMzBLPRTvyshJR7
// SIG // 2hMrorzPbqDU1vSnEmxopxBJHLFl+tbJz0UbZ+imID20
// SIG // HxL3tx0335px2Bo=
// SIG // End signature block
